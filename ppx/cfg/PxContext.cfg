PPxCFG  = 
;---------------------------------------------------------------------------
;・ポップアップメニュー
;/ M_Ccr/ M_Unone/ M_UDir/ M_Uimage*/ M_Udoc/ M_Uarc/
;/ M_Carc/ M_Clist/ M_Chttp/ M_DirMenu*/ M_Cgit/ M_File*/ M_bin/ M_xunpack/ M_xpack/ M_ppvc/ M_editci/ M_editc/
;---------------------------------------------------------------------------
;** Apps共通
;---------------------------------------------------------------------------
-|M_Ccr =
M_Ccr = {
Ext          = 
マークパス書き出し(&L)  = *script %'scr'%\listControl.js,listfile,%*input("|%1|%\marklist.sz7" -title:"パスの設定" -select:i)
--  =
リネーム(&R)  = ?M_FileRename
コメント  &[  = ?M_menuCTool1
属性(&A)      = %K"@A"
--  =
圧縮(&P)      = ?M_xpack
--  =
移動(&M)      = ?M_FileMOVE
コピー(&C)    = ?M_FileCOPY
削除(&D)      = %"ファイル操作" %Q"選択エントリを削除します"
                 *ppcfile !safedelete,%*name(HP,%1)%'trash'%\,/qstart /min /retry:0 /error:0
-- =
サムネイル設定(&T)  = *if %*RESULT(Pane.Count) <= 1%: *return *setentryimage "" /save
                      *setentryimage "%2\%~R" /save
サムネイル削除(&T)  = *if %*RESULT(DirectoryType) == 9 %: *delete "%C" %: *stop
                      *delete "%C:thumbnail.jpg"
--  =
プロパティ(&I)  = %K"@&ENTER"
}
;---------------------------------------------------------------------------
;** Apps振り分けなし
;---------------------------------------------------------------------------
-|M_Unone =
M_Unone = {
移動形式      = ??exjumpmenu
--  =
テキスト変換(&X)    = ?M_Udoc
}
;---------------------------------------------------------------------------
;** Appsディレクトリ
;---------------------------------------------------------------------------
-|M_Udir =
M_UDir  = {
ディレクトリ内検索(&W)  = *where -path:"%#;FC" -listfile:"%'repoppx'%\list\PPXRESULT.xlf"
; テキスト置換(&S)      = %0..\spe5d\Speeeeed.exe %#FDC
--  =
画像変換(&R)        =?M_Uimage1
--  =
;&MassiGra           = viewer /newwnd %FDC
;--  =
}
;---------------------------------------------------------------------------
;** Apps画像
;---------------------------------------------------------------------------
-|M_Uimage =
M_Uimage = {
移動形式            = ??exjumpmenu
--                  = 
; &AzPaiter           = *AHK AzPainter2.ahk %FDC
; &EDGE               = *AHK EDGE.ahk %FDC
;--                  = 
画像変換(&R)        = ??M_Uimage1
||  =
背景に設定(&B)      = *setcust X_bg:P_%n=%FDC
                      *setcust X_bg:T_%n=20
                      *setcust X_bg:B_%n=30
                      *color back
--  =
}
-|M_Uimage1 =
M_Uimage1 = {
; &Ec                 = %Oxi %0..\ec150\EC.exe
;                       *autodragdrop #%*findwindowclass("TMainForm"),%FDC
&Ralpha             = %Oi %0..\Ralpha\Ralpha.exe
                      *autodragdrop "Ralpha Image Resizer",%FDC
;--  = 
;リサイズ横1400(&W)  = %0..\Ralpha\Ralpha.exe /ini=resize_w140%"連番初期値の設定 0 or 1"%{0%}.ini %#FDC
;リサイズ縦2000(&H)  = %0..\Ralpha\Ralpha.exe /ini=resize_h200%"連番初期値の設定 0 or 1"%{0%}.ini %#FDC
;プログレ除去(&D)    = %0..\Ralpha\Ralpha.exe /ini=losslessJPG.ini %#FDC
;連結(&C)            = %0..\Ralpha\Ralpha.exe /ini=combination.ini %#FDC
;変換:&Png           = %0..\Ralpha\Ralpha.exe /ini=convPNG.ini %#FDC
;変換:&BMP16         = %0..\Ralpha\Ralpha.exe /ini=bmp16.ini %#FDC
;変換:&BMP256        = %0..\Ralpha\Ralpha.exe /ini=bmp256.ini %#FDC
}
;---------------------------------------------------------------------------
;** Appsテキスト形式
;---------------------------------------------------------------------------
-|M_Udoc =
M_Udoc = {
文字列置換(&R)                 = %On %"文字列の置換 [検索文字/置換文字]" *ppb -c sed -i_back -e "s/%E/g" %#FDC
--  = 
文字コード変換: &SJIS(CRLF)    = %On *PPb -c nkf -s -Lw -c -x --no-best-fit-chars --overwrite %#FDC
文字コード変換: &UTF16LE       = %On *PPb -c nkf -w16L -x --no-best-fit-chars --overwrite %#FDC
文字コード変換: UTF&8(LF)      = %On *PPb -c nkf -w -Lu -d --overwrite %#FDC
文字コード変換: UTF8&BOM(LF)   = %On *PPb -c nkf -w8 -Lu -d --overwrite %#FDC
}
;---------------------------------------------------------------------------
;** Apps書庫
;---------------------------------------------------------------------------
-|M_Uarc  =
M_Uarc = {
書庫内検索(&W)  = *where -path:"%R" -vfs -listfile:"%'repoppx'%\list\PPXRESULT.xlf"
--  = 
移動形式(&Y)    = ??exjumpmenu
--  =
;&MassiGra       = viewer %FDC
;--  =
解凍(&U)        =?M_Xunpack
}
;---------------------------------------------------------------------------
;** アーカイブ内
;---------------------------------------------------------------------------
-|M_Carc  =
M_Carc  ={
下層を開く(&O)  = %K"C_DIR"
; サムネイル表示(&T)      = *setcust XC_ocig = 2,0,1,0,0,256,1
;                           %K"@F5"
;                           *linecust pict_cache,KC_main:LOADEVENT,*if %%*RESULT(DirectoryType) != 64 %%: *setcust XC_ocig = 2,0,0,0,0,256,1 %%: *js "PPx.Execute('*linecust pict_cache,KC_main:LOADEVENT,')"
;                           *if %*RESULT(DirectoryType) != 64 %: %j %FD::ax7z.spi
-- =
ワークスペースに解凍(&U)    = *unpack %'work'
ディレクトリにまとめる(&U)  = *unpack %*RESULT(makepath)UNPACK
--  =
移動(&M)        = *script %'scr'%\cmdMove.js
コピー(&C)      = *script %'scr'%\cmdCopy.js,0
削除(&D)        = %"ファイル操作" %Q"書庫から削除します" %: %u7-zip64.dll,d -hide %FD %@
}
;---------------------------------------------------------------------------
;** リストファイル内
;---------------------------------------------------------------------------
-|M_Clist =
M_Clist = {
該当ディレクトリ(&J)  = *jumppath %FC /entry
--  = 
Ext                   = 
リンク切れ抽出(&N)    = *script %'scr'%\markNotExist.js
リストから消去(&D)    = %K"@^\D"
--  =
;リネーム :&Allrename  = %Oi %0..\allrename\allrename.exe /file
;                        %K"null"
;                        *autodragdrop "AllRename"
メモ(&E)              = %Os *MEMO %*input(-title:"memo" -mode:e)
-- =
移動(&M)        = *script %'scr'%\cmdMove.js
コピー(&C)      = *script %'scr'%\cmdCopy.js,1
実体削除(&D)    = %"ファイル操作" %Q"実ファイルを削除します"
                  %Oa *ppcfile !safedelete,%*name(HP,%1)%'trash'%\,/min /qstart /compcmd %K"@^\D"
-- =
マークパス書き出し(&L)  = *script %'scr'%\listControl.js,listfile,%'work'%\marklist.sz7
}
;---------------------------------------------------------------------------
;** HTTP
;---------------------------------------------------------------------------
-|M_Chttp =
M_Chttp = {
}
;---------------------------------------------------------------------------
;** ディレクトリメニュー
;---------------------------------------------------------------------------
-|M_DirMenu =
M_DirMenu = {
ディレクトリ検索(&W)  = *where -vfs -listfile:"%'repoppx'%\list\PPXRESULT.xlf"
--  = 
エントリ作成(&N)  = ?newmenu
--  = 
表示(&V)          = ?viewmenu
ソート(&S)        = ?sortmenu
--  = 
ローカル(&L)      = ?drivemenu
--  =
キャッシュON(&E)  = *cache on
                    %K"@F5"
〃        OFF(&E) = *cache off
--  = 
; &DFで開く         = *launch %0..\DF\DF.EXE %DCA -w%DCB
; -- =
背景を解除(&Q)    = *setcust X_bg:P_%n=
                    *customize X_bg:T_%n=
明度調整(&L)      = *string o,title=明るさ [min-max:1-100]
                    *customize X_bg:B_%n=%{%*getcust(X_bg:B_%n)%}
--  =
オプション(&O)    = ?diroptionmenu
プロパティ(&R)    = %z%FVD,properties
}
;---------------------------------------------------------------------------
;** Git
;---------------------------------------------------------------------------
-|M_Cgit  =
M_Cgit = {
&Add -v %%#FC       = git add -v %#FC
&Chechout <branch>  = *script %'scr'%\gitCheckout.js,%'repoppx'%\list\GITBRANCH.TXT
; checkout <&HEAD>        = git checkout %*input(-title:"git checkout" -mode:e -k *COMMITLIST)
; check&out ours %%#FC    = %"checkout ours"%Q"現ブランチ優先でマージ" %: git checkout --ours %#FC
; check&out theirs %%#FC  = %"checkout theirs"%Q"対象ブランチ優先でマージ" %: git checkout --theirs %#FC
--  =
m&V %%R <rename>    = git mv %*extract(C"%%R") %*input("%*extract(C"%%Y.%%t")" -title:"git mv <名前の変更>" -mode:Ec -select:fs)
m&V %%FC <dest>     = git mv %*extract(C"%%FC") %"git mv <対象パスの選択>"%$'repo'
--  =
; &Reset <commit> %%#FC   = git reset %*input(-title:"git reset 指定コミットをステージにadd" -mode:e -k *COMMITLIST)" %#FC
; --  =
&Rm -f %%#FC        = *string o,delFile=%*extract(C"%%#FC")
                      %"git rm <削除>" %Q"%*regexp("%so"delFile"","s/\s/\n/g")" %: *ifmatch %*extract(C"%%*RESULT(filetype)"),DIR %: git rm -f -r %so"delFile" %: *stop
                      git rm -f %so"delFile"
&Rm cached %%#FC    = *string o,delFile=%*extract(C"%%#FC")
                      %"git rm cached <キャッシュ削除>" %Q"%*regexp("%so"delFile"","s/\s/\n/g") %: *ifmatch %*extract(C"%*RESULT(filetype)"),DIR %: git rm --cached -r %so"delFile" %: *stop
                      git rm --cached -r %so"delFile"
--  =
&Show           = @git show %OD%*input(-title:"git show コミットの選択" -mode:e -k *COMMITLIST) --date=short --format="%%C(yellow reverse)%%h%%C(reset) %%C(magenta)[%%ad] %%C(cyan)@%%an %%C(green) %%s%%C(auto)%%d" %OD-
changed &Index  = *string o,path="%'repoppx'%\list\GITRESULT.XLF"
                  *script %'scr'%\listControl.js,git,%so"path"
                  %Os *wait 500,1
                  %On *ppb -c git diff --name-only --no-renames -D %*input(-title:"git diff コミットの選択" -mode:e -k *COMMITLIST) | nkf -w16L0 -Lw >>%so"path"
                  *jumppath %so"path"
--  =
c&Lone <name>   = %"git clone?"%Q"%*clippedtext()" %: git clone %*clippedtext() %*input(-title:"レポジトリの名称" -mode:d)
-- =
&Tig            = tig
vim&Diff        = gvim "+Gdiff %*input(-title:":Gdiff コミットの選択" -mode:e -k *COMMITLIST)" %*extract(C"%%R")
}
;---------------------------------------------------------------------------
;**リネーム
;---------------------------------------------------------------------------
-|M_FileRename  =
M_FileRename = {
; 前に追加(&F)          = *ppcfile !rename -min -qstart -extractname -name:"%*input(-title:"Rename 前に追加" -mode:c)%%C"
; 後ろに追加(&B)        = *ppcfile !rename -min -qstart -extractname -name:"%%X%*input(-title:"Rename 後ろに追加" -mode:c).%%T"
; 置換(&R)              = *string i,opt=""
;                         *string i,Edit_OptionCmd=*string i,opt=%%*input(%%si"opt" -title:"フラグ  [I]=case [g]=global" -mode:e)%%:*linemessage %%si"opt"
;                         *ppcfile !rename -min -qstart -same:3 -name:"s/%*input(-title:"Replace [対象文字]/[置換文字]" -mode:Oe)/%si"opt""
; ; 置換(&R)              = *ppcfile !rename -min -qstart -same:3 -name:"s/%"対象文字"%E/%"置換文字"%E/"
; 連番(&N)              = *string i,opt=000
;                         *string i,Edit_OptionCmd=*string i,opt=%%*input(%%si"opt" -title:"開始番号" -mode:n)%%:*linemessage %%si"opt"
;                         *string o,name="%*input(-title:"Numbering [\]=連番" -mode:Oc -k *linemessage %si"opt").%%T"
;                         *ifmatch !*\*,%so"name" %: %"中止"%I"マクロ文字[\]がない。" %: *stop
;                         *ppcfile !rename -min -qstart -log:off -extractname -name:%so"name" -snum:%si"opt"
; ; 連番(&N)              = *ppcfile rename -log:off -extractname -name:"\.%%T"
; -- =
&Swap!                = *script %'scr'%\renameSwap.js
-- =
&Allrename        = %Oi %0..\allrename\allrename.exe /file
                    %K"null"
                    *autodragdrop "AllRename"
&PPffix         = *ppffix %#FDC
}
-|M_FileRenameEdit =
M_FileRenameEdit = {
前に追加(&F)          = *replace :%*edittext()%%C
                        *script %'scr'%\selStr.js,"(\:(.*))%%C"
後ろに追加(&B)        = *replace :%%X%*edittext().%%T
                        *script %'scr'%\selStr.js,"(\:%%X(.*))\.%%T"
置換(&R)              = *linemessage s/対象文字/置換文字/[g][I]   ※:%%展開をOFF
                        *replace s/%X//
                        *script %'scr'%\selStr.js,"(s\/(.*))\/\/"
連番(&N)              = *linemessage [\]=連番マクロ
                        *replace :%*edittext()\.%%T
                        *script %'scr'%\selStr.js,"(.*(\\))\.%%T"
数字桁揃え(&S)          = *replace ":%%*padding(%%X,3,0).%%T"
                          *script %'scr'%\selStr.js,"(.*(3))"
拡張子(&E)            = *replace :%%X.%*edittext()
                        *script %'scr'%\selStr.js,"(.*%%X\.(.*))"
}
;---------------------------------------------------------------------------
;**移動
;---------------------------------------------------------------------------
-|M_FileMOVE  =
M_FileMOVE  = {
移動(&M)                = *script %'scr'%\cmdMove.js,1
一つ上に移動(&U)        = *ppcfile !move,..\,/min /qstart /nocount /same:5 /log:off /compcmd %k"PAUSE
ディレクトリにまとめる(&K)  = *ppcfile !move,"%FDN\%"ディレクトリ名"%{%*nowdatetime("ND_HU")%}",/min /qstart /nocount /log:off
;;/querycreatedirectory:off
-- =
詳細設定(&D)            = *script %'scr'%\cmdMove.js
}
;---------------------------------------------------------------------------
;**コピー
;---------------------------------------------------------------------------
-|M_FileCOPY =
M_FileCOPY = {
コピー(&C)              = *script %'scr'%\cmdCopy.js,1
同DIRリネームコピー(&R) = *ppcfile !Copy,"%1",/qstart /min /nocount /preventsleep /same:5 /log:off
シンボリックリンク(&L)  = *script %'scr'%\cmdCopy.js,2
-- =
詳細設定(&D)            = *script %'scr'%\cmdCopy.js,0
; -- =
; クラウド(&S)            = ?M_Cauxmenu
}
;---------------------------------------------------------------------------
;** バイナリ閲覧
;---------------------------------------------------------------------------
-|M_bin =
M_bin = { ** comment **
&Diff     = *if %*RESULT(EntryMarkCount) == 2 %: merger %#FDC %: *stop
            merger "%R" "%~FDCN"
&FC       = *if %*RESULT(EntryMarkCount) == 2 %: FC /b %#FDC %: *stop
            FC /b %FDC "%~FDCN"
--        =
&Hex dump = *ppv "%C" -r -hex
}
;---------------------------------------------------------------------------
;** 解凍
;---------------------------------------------------------------------------
-|M_xunpack =
M_xunpack = {
ここに解凍(&U)      = %Oi %u7-zip64.dll,x -aos -hide %FDC "-o%FDN" %: *trimmark
--  =
ワークスペース(&W)  = %Oi %u7-zip64.dll,x -aos -hide %FDC "-o%'work'" %: *trimmark
反対窓に解凍(&O)    = %Oi %u7-zip64.dll,x -aos -hide %FDC "-o%~FDN" %: *trimmark
--  =
画像抽出(&P)        = %Oi %u7-zip64.dll,e -aos -hide %FDC "-o%*RESULT(makepath)*" *.jpg *.jpeg *.bmp *.png *.gif %: *trimmark
音楽抽出(&M)        = %Oi %u7-zip64.dll,e -aos -hide %FDC "-o%*RESULT(makepath)*" *.mp3 *.mid *.wav *.ogg %: *trimmark
--  =
閲覧(&L)            = reces /mL7-zip64.dll %R %: %K"@^TAB
完全性テスト(&T)    = reces /mt7-zip64.dll %R %: %K"@^TAB
; 完全性テスト(&T)    = %Oi %u7-zip64.dll,t %R
}
;---------------------------------------------------------------------------
;** 圧縮
;---------------------------------------------------------------------------
-|M_xpack =
M_xpack = {
zi&p method5    = *if %*RESULT(EntryMarkCount) <= 1 %: %u7-zip64.dll,u -tzip -mx=5 -hide "%*input("%*RESULT(makepath)%|%X%|.zip" -mode:Ec -select:i)" "%FCN%S"\"" %: *trimmark %: *stop -n
                  %u7-zip64.dll,u -tzip -mx=5 "%*input("%*RESULT(makepath)%|%X%|.zip" -mode:Ec -select:i)" %@FCB %: *trimmark
zip &NoComp     = *if %*RESULT(EntryMarkCount) <= 1 %:  %u7-zip64.dll,u -tzip -mx=0 -hide "%*input("%*RESULT(makepath)%|%~X%|.zip" -mode:Ec -select:i)" "%FCN%S"\"" %: *trimmark %: *stop -n
                  %u7-zip64.dll,u -tzip -mx=0 -hide "%*input("%*RESULT(makepath)%|%~X%|.zip" -mode:Ec -select:i)" %@FCB %: *trimmark
&zip(PASS付き)  = %u7-zip64.dll,u -tzip -mx=5 -p -mem=AES256 -hide "%*input("%*RESULT(makepath)%|%X%|.zip" -mode:Ec -select:i)" %@FCB
-- =
&7z             = %u7-zip64.dll,u "%*input("%*RESULT(makepath)%|%X%|.7z" -mode:Ec -select:i)" %@FCB %S"-r"
&7z(PASS付き)   = %u7-zip64.dll,u -p "%*input("%*RESULT(makepath)%|%X%|.7z" -title:"パス付き書庫の名前" -mode:Ec -select:i)" %@FCB
&Cab            = %uCAB32.dll,-a -r "%*input("%*RESULT(makepath)%|%X%|.cab" -mode:Ec -select:i)" %@FCB
--  =
追加圧縮(&A)    = %"追加圧縮"%Q"階層内への追加は未対応" %: %u7-zip64.dll,u %*regexp("%~FDC","s/^(.*\\.*?(7z|zip)).*/$1/") %@FCB %S"-r"
--  =
基底DIR除去(&D) = *ppb -c reces /mrzip /l0 /eb /t /of%{%FX_%} /d2 %FDCB
最適化圧縮(&O)  = %ORs *ifmatch %*RESULT(filetype),DIR %: %0..\Ralpha\Ralpha.exe /ini=convJPG%"連番初期値の設定 0 or 1"%{0%}.ini %FDC %: *ppb -c reces /mc /of"%*input("%*RESULT(makepath)%|%Y%|.zip" -title:"無圧縮書庫の名前" -mode:Ec -select:i)" /eb /l0 %'work'%\_%FC %: *stop
;                   *ifmatch %*RESULT(filetype),PKZIP %: *ppb -c reces /{"optPACK.cfg" %FDCB %: *stop
;                   *linemessage !"select "DIR" or "ZIP"
; RalphaCFG作成(&M)  = reces /mrzip /l0 /e /t /r"C:\bin\Ralpha\Ralpha.exe /ini=optPACK.ini ."  /}"optPACK.cfg" :
}
;---------------------------------------------------------------------------
;** PPv
;---------------------------------------------------------------------------
-|M_ppvc  =
M_ppvc  = { ; PPvコンテキスト追加分
;開く =*ppv -r %*selecttext()
;-- =
; PPcで実行   = *execute C,%*selecttext()
ファイル内検索  = %k"%*selecttext()
                  %K"@^F
--  =
Ecosia      = *launch %'browser' https://www.ecosia.org/search?q=%*selecttext(u)
nifty辞書   = *ppv -bootid:Y -tag:on -css:off -script:off http://dictionary.nifty.com/search/result?q=%*selecttext(u)&t=0&r=ejje
}
;---------------------------------------------------------------------------
;・一行編集コンテキストメニュー
;---------------------------------------------------------------------------
-|M_editci  =
M_editci  = {
ファイルメニュー(&F)\tCtrl+]  = %k"^']'
編集メニュー(&M)\tCtrl+Q      = %k"^Q
設定メニュー(&S)\tShift+F2    = %k"\F2
--  =
エントリ読み込み(&R)  = *replacefile %*extract(C"%%FDC")
                        *setcaption %*extract(C"%%FC")
-- =
編集テンプレ(&E)      = *replacefile %'repoppx'%\cfg\TPL_Pxx.txt
                        *setcaption TPL_Pxx.txt
コマンド追加(&A)      = *setcust M_menuCTool:%"コマンド名の登録"%E=%*edittext
                        %Onb echo %*edittext>> %'repoppx'%\cfg\@command.txt
;元の編集メニュー(&B)\tShift+F10  = *defaultmenu
;選択ファイル名\tCtrl+N   = %k"^N
;選択ファイルパス\tCtrl+P = %k"^P
;選択ファイル(拡張子無)\tCtrl+E = %k"^E
;選択ファイル拡張子\tCtrl+T = %k"^T
;カーソルファイル\tCtrl+R = %k"^R
;PPxパス\tCtrl+0    = %k"^0
;カレントパス\tCtrl+1   = %k"^1
;反対窓パス\tCtrl+2   = %k"^2
}
-|M_editc   =
M_editc     = { ; 一行編集コンテキストメニュー
大文字/小文字(&W)\tCtrl+Q-U     = %k"^QU
全角/半角(&Z)\tCtrl+K-Z         = %k"^KZ
-- =
反対窓カーソルファイル名(&Y)    = *insert "%~Y"
カーソルファイル(&R)\tCtrl+R    = %k"&R
選択ファイル名(&X)\tCtrl+E      = %k"&X
選択ファイル拡張子(&T)\tCtrl+T  = %k"&T
選択ファイルパス(&P)\tAlt+P     = %k"&P
-- =
お気に入り(&N)\tCtrl+Shift+P    = %k"^\P
PPcのパス(&L)\tCtrl+Shift+L     = %k"^\L
ディレクトリ(&O)\tCtrl+Shift+D  = %k"^\D
ファイル(&G)\tCtrl+Shift+I      = %k"^\I
|| =
汎用(&g)            = *editmode g
コマンド(&h)        = *editmode h
フルパス(&f)        = *editmode f
ディレクトリ(&d)    = *editmode d
ファイル(&c)        = *editmode c
PPv履歴(&x)         = *editmode x
マスク(&m)          = *editmode m
キーリスト(&k)      = *setcaption キーの検索
                      *completelist /file:%0PPXUKEYS.TXT
                      *editmode e
G&IT                = *completelist /set /file:%'repoppx'%\list\GITCOMMAND.TXT
                      *editmode e
コミット(&l)        = *COMMITLIST
;数値(&n)           = *editmode n
;検索(&s)           = *editmode s
--                  =
使用しない(&e)      = *editmode e
}
;初期値
;元に戻す(&U)\tCtrl+Z = %k"^Z
;-- = 
;切り取り(&T)\tCtrl+X = %k"^X
;コピー(&C)\tCtrl+C = %k"^C
;貼り付け(&P)\tCtrl+V = %k"^V
;削除(&D)\tDelete = %k"DEL
;-- = 
;全て選択(&A)\tCtrl+A = %k"^A
;|| = 
;元の編集メニュー(&B)\tShift+F10  = *defaultmenu
;ファイルメニュー(&F)\tCtrl+] = %k"^']'
;編集メニュー(&M)\tCtrl+Q = %k"^Q
;設定メニュー(&S)\tShift+F2 = %k"\F2
;-- = 
;大-小文字変換(&W)\tCtrl+Q-U  = %k"^QU
;全-半角変換(&Z)\tCtrl+K-Z  = %k"^KZ
;管理者として実行(&R)\tESC-R  = %k"^']' R
;|| = 
;行番号(&J)\tCtrl+Q-J = %k"^QJ
;検索(&F)\tCtrl+F = %k"^F
;-- = 
;お気に入り(&N)\tCtrl+Shift+P = %k"^\P
;PPcのパス(&L)\tCtrl+Shift+L  = %k"^\L
;ディレクトリ(&O)\tCtrl+Shift+D = %k"^\D
;ファイル(&G)\tCtrl+Shift+I = %k"^\I
;パス挿入(&I) = %M_editci
