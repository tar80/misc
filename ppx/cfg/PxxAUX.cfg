PPxCFG  = 
;---------------------------------------------------------------------------
;/ S_auxRCLONE/ S_auxGIT/
;---------------------------------------------------------------------------
;** config
;---------------------------------------------------------------------------
-|S_auxRCLONE =
S_auxRCLONE = {
base    = aux://S_auxRCLONE/ %; remote:/path
cmd     = rclone
lf      = %'list'%\rclone.xlf
code    = %'scr'%\main_aux.js
setpass = *ifmatch 0,0%'RCLONE_CONFIG_PASS' %: *set RCLONE_CONFIG_PASS=%*pass %: *stop
reload  = *ifmatch !0,0%si"xID" %: %*setpass *script %*code,rclone,list,%*lf,%*path,0,%si"xID" %: *stop
list    = *if %*keystate(226)%*keystate(220)%*keystate(116)%*keystate(13)%*keystate(8) %: *string i,xID=%*extract(C,%%n)
          %*reload %: *string i,xID= %: %'list'%\rclone.xlf
get     = *execute C,*logwindow "aux: entry copying..." %: *run -min %0ppbw -c %*cmd copy "%*path%*addchar(/)%*src" "%*name(D,%*dest)"
store   = *string i,xID=%*extract(C,%%~n) %: *execute C,*logwindow "aux: entry copying..." %: *run -min %0ppbw -c %*cmd copy "%*src" "%*path%*addchar(/)" %&
makedir = *string i,xID=%*extract(C,%%n) %: *execute C,*logwindow "aux: directory making..." %: *run -min %0ppbw -c %*cmd mkdir "%*path" %&
del     = *string i,xID=%*extract(C,%%n) %: *execute C,*logwindow "aux: entry deleting..." %: *run -min %0ppbw -c %*cmd delete "%*path" %&
deldir  = *string i,xID=%*extract(C,%%n) %: *execute C,*logwindow "aux: directory deleting..." %: *run -min %0ppbw -c %*cmd rmdir "%*path" %&
; rename  = %Osa %*cmd move "%*path" "%*dest" ; 機能しない
}

; S_auxRCLONE = {
; base    = aux://S_auxRCLONE/ %; remote:/path
; cmd     = rclone
; lf      = %'list'%*addchar(\)rclone.xlf
; node    = node %'myrepo'%*addchar(\)nodejs\PPx\index.js
; keys    = *if %*keystate(226)%*keystate(220)%*keystate(116)%*keystate(13)%*keystate(8) %: *string p,aux_flag=1 %: *stop
; reload  = *if 0%sp"aux_flag" %: %*node %*cmd list %*lf %*path %: *focus %: *stop
; list    = %*keys %*reload %: *string p,aux_flag= %: %'list'%\rclone.xlf
; get     = %*node %*cmd get %*lf "%*path%*addchar(/)%*src" "%*name(D,%*dest)"
; store   = %*node %*cmd get %*lf "%*src" "%*path%*addchar(/)" %: *execute ~, *js "PPx.EntryInsert(PPx.EntryDisplayCount,PPx.Extract('%*dest'))"
; ; rename  = %*node %*cmd move %*lf "%*path%*addchar(/)%*src" "%*name(D,%*dest)"
; makedir = %*node %*cmd makedir %*lf "%*path" %: *string p,aux_flag=1
; del     = %*node %*cmd del %*lf "%*path"
; deldir  = %*node %*cmd deldir %*lf "%*path"
; }

-|S_auxGIT =
; S_auxGIT = {
; base    = aux:S_auxGIT\ %; local:\path
; cmd     = git
; scr     = *if !0%*extract(C"%%si""flag""") %: *script %'myrepo'%*addchar(\)PPx\xtest.js %: *stop
; list    = %*scr %: %*path
; get     = %Oa copy "%*path%\%*src" "%*dest"
; store   = %Oa copy "%*src" "%*path%\%*dest"
; rename  = %Oa %*cmd mv "%*path" "%*dest"
; del     = %Oa %*cmd rm --cached "%*path"
; deldir  = %Oa %*cmd rm -r --cached "%*path"
; }

-|S_git-status =
; S_git-status = {
; base    = aux:S_git-status\
; list    = %'list'%*addchar(\)git\_gitstatus.xgit
; }
