;** GitMode keybind
KC_main = {
ENTER   , *string o,en=%*js(PPx.Result=PPx.Entry.Name;)
          *ifmatch 0,0%so"en" %: *stop
          *string o,cm="%*js(PPx.Result=PPx.Entry.Comment)"
          *ifmatch "M ",%so"cm" %: *string o,cr=HEAD
          *ifmatch status,%si"gm" %: gvim "+Gitdiff %so"cr" %R" %R %: *stop
          *ifmatch log,%si"gm" %: node %'myrepo'%\nodejs\ppx\git_getlog.js 0 %so"en" %so"en" log %: *stop
          *ifmatch commit,%si"gm" %: gvim "+Gitdiff %so"cm" %R" %R %: *stop
          %M_zz3gitkeys,!KC_main:enter
ESC     , *customize C_back=%*getcust(_User:g_C_back)
          *deletecust _User:g_git_pos %: *deletecust _User:g_C_back
          *closeppx "CG,VG"
          *pptray -c *focus PPC[ %%: *script %'scr'%\exchangeKeys.js,0,%'cfg'%\zz3GitKeys.cfg
TAB     , *if 0%NVG %: *focus #%NVG %: *stop
          *if 0%*NT %: *focus #%*NT %: *stop
\SPACE  , *string o,id=%*midstr(%n,1)
          *ifmatch !0,0%si"gm" %: %K"@\SPACE %: *stop 0==0%*extract(C"%%NV%so"id"") %: *execute V%so"id", *jumpline 0 %%: *find "+++ %*js(PPx.Result=PPx.Entry.Name)" %: *stop
          %M_zz3gitkeys,!KC_main:\space
SPACE   , *string o,id=%*midstr(%n,1)
          *ifmatch !0,0%si"gm" %: %K"@SPACE %: *stop 0==0%*extract(C"%%NV%so"id"") %: *execute V%so"id", *jumpline 0 %%: *find "+++ %*js(PPx.Result=PPx.Entry.Name)" %: *stop
          %M_zz3gitkeys,!KC_main:space
F10     , *ifmatch !0,0%si"gm" %: *script %'scr'%\gitModePos.js,c %: *stop
          %M_zz3gitkeys,!KC_main:F10
F5      , *clearchange
\F5     , *ifmatch status,%si"gm" %: node %'myrepo'%\nodejs\ppx\git_getlog.js 1 0 1 status %: *stop
          *ifmatch log,%si"gm" %: node %'myrepo'%\nodejs\ppx\git_getlog.js 0 1 0 log %: *stop
          %M_zz3gitkeys,!KC_main:\F5
^Q      , *ifmatch !0,0%si"gm" %: *postmessage %*NT,258,81,0 %: *stop ;^@ PPbにQのキーコードを送る
          %M_zz3gitkeys,!KC_main:^Q
'\'     , *ifmatch 0,0%si"gm" %: %M_zz3gitkeys,!KC_main:'\'
E       , *string o,mc=%*js(PPx.Result = PPx.EntryMarkCount;)
          *if 4<=%so"mc" %: %"確認"%Q"%so"mc"エントリがマークされています%bn続行しますか？"
          *string o,cm=%*js(PPx.Result=PPx.Entry.Comment)
          *ifmatch commit,%si"gm" %: gvim "+r! git show %so"cm":%*js(PPx.Result=PPx.Entry.Name;)" %so"cm"_%*name(C,"%FC") %: *stop
          %ME_editor
J       , *ifmatch status,%si"gm" %: %K"@DOWN %: *stop 0==0%*extract(C"%%NVG") %: *execute VG,*jumpline 0 %%: *find "+++ %*js(PPx.Result=PPx.Entry.Name)" %: *stop
          *ifmatch log,%si"gm" %: %K"@DOWN %: *stop
          *ifmatch commit,%si"gm" %: %K"@DOWN %: *stop 0==0%*extract(C"%%NVG") %: *execute VG,*jumpline 0 %%: *find "+++ %*js(PPx.Result=PPx.Entry.Name)" %: *stop
          %M_zz3gitkeys,!KC_main:J
\J      , *ifmatch !0,0%si"ppvdiff" %: *stop 0==0%*extract(C"%%NVG") %: *execute VG,%%K"@DOWN" %: *stop
          %M_zz3gitkeys,!KC_main:\J
K       , *ifmatch status,%si"gm" %: %K"@UP %: *stop 0==0%*extract(C"%%NVG") %: *execute VG, *jumpline 0 %%: *find "+++ %*js(PPx.Result=PPx.Entry.Name)" %: *stop
          *ifmatch log,%si"gm" %: %K"@UP %: *stop
          *ifmatch commit,%si"gm" %: %K"@UP %: *stop 0==0%*extract(C"%%NVG") %: *execute VG,*jumpline 0 %%: *find "+++ %*js(PPx.Result=PPx.Entry.Name)" %: *stop
          %M_zz3gitkeys,!KC_main:K
\K      , *ifmatch !0,0%si"ppvdiff" %: *stop 0==0%*extract(C"%%NVG") %: *execute VG,%%K"@UP" %: *stop
          %M_zz3gitkeys,!KC_main:\K
^L      , *jumppath -savelocate
          *ifmatch !0,0%si"gm" %: *string i,gm=log %: *jumppath %*regexp("%si"pl"","s/_commit//") %: *viewstyle -temp gitlog %: *stop
          %M_zz3gitkeys,!KC_main:^L
Q       , *ifmatch !0,0%si"gm" %: *stop 0==0%*extract(C"%%NVG") %: *string i,ppvdiff= %: *closeppx VG %: *stop
          %M_zz3gitkeys,!KC_main:Q
^S      , *ifmatch !0,0%si"gm" %: *string i,gm=status %: *jumppath %si"ps" %: *string i,pd=%*regexp("%si"pd"","s/_commit//") %: *viewstyle -temp gitstatus %: *stop
          %M_zz3gitkeys,!KC_main:^S
Y       , *setcust X_vpos=0
          *string o,en=%*js(PPx.Result=PPx.Entry.Name;)
          *ifmatch status,%si"gm" %: *if !0%si"ppvdiff" %: *string i,ppvdiff=1 %: *ppv -r -esc:on -bootid:G %si"pd" -k *jumpline 0 %%: *find "+++ %so"en"" %%: *focus CG %: *stop
          *ifmatch status,%si"gm" %: *string i,ppvdiff= %: *closeppx VG %: *stop
          *ifmatch log,%si"gm" %: *postmessage %*NT,258,81,0 %: git -P log -n1 --stat --color %so"en" %: *stop
          *ifmatch commit,%si"gm" %: *if !0%si"ppvdiff" %: *string i,ppvdiff=1 %: *ppv -r -esc:on -bootid:G %si"pd" -k *jumpline 0 %%: *find "+++ %so"en"" %%: *focus CG %: *stop
          *ifmatch commit,%si"gm" %: *string i,ppvdiff= %: *closeppx VG %: *stop
}

KV_main = {
FIRSTEVENT  , *customize XV_drag=0,1,3,2
              *setcust MV_click:L_SPC=@^ENTER
              *setcust @%'cfg'%\zz2HMppvDoc.cfg
              *script %'scr'%\movingPPv.js
LOADEVENT   =
ACTIVEEVENT =
TAB         , *ifmatch !0,0%*extract(CG"%%si""gm""") %: *focus CG %: *stop
              %M_zz3gitkeys,!KV_main:TAB
^TAB        , *string o,ppe=%*findwindowclass(PPeditW)
              *if %so"ppe" %: *focus #%so"ppe" %: *stop
              *focus C
ESC         , *setcust X_vpos=0
              *ifmatch !0,0%*extract(CG"%%si""gm""") %: *execute CG,*string i,ppvdiff=
              %K"@Q"
Q           , *ifmatch !0,0%*extract(CG"%%si""gm""") %: *execute CG,*string i,ppvdiff=
              %K"@Q"
Y           , *setcust X_vpos=0
              *ifmatch !0,0%*extract(CG"%%si""gm""") %: *execute CG,*string i,ppvdiff=
              %K"@Q"
}

KB_edit = {
ESC   , %Oi *script %'scr'%\exchangeKeys.js,0,%'cfg'%\zz3GitKeys.cfg
        *customize C_back=%*getcust(_User:g_C_back)
        *deletecust _User:g_git_pos %: *deletecust _User:g_C_back
        *closeppx "CG,VG,B*"
^TAB  , *focus CG
F4    , *string o,ppe=%*findwindowclass(PPeditW)
        *if %so"ppe" %: *focus #%so"ppe" %: *stop
}

K_ppe = {
ESC   , *focus CG %: %k"1"
^TAB  , *if 0%NVG %: *focus #%NVG %: *stop
        *if 0%*NT %: *focus #%*NT %: *stop
; ^S    , %M_CgitSub,C
}
